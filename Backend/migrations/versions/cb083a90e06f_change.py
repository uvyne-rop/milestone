from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = 'cb083a90e06f'
down_revision = '0a2afeb42ca9'
branch_labels = None
depends_on = None


    
def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('space', schema=None) as batch_op:
        batch_op.add_column(sa.Column('date_taken', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('description', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('rating', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('space_id', sa.String(length=50), nullable=True))
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)

        # Create unique constraint with a name
        batch_op.create_unique_constraint('uq_space_space_id', ['space_id'])

        # Drop foreign key constraints with names found in the database
        # batch_op.drop_constraint('correct_fk_name_for_user_id', type_='foreignkey')
        # batch_op.drop_constraint('correct_fk_name_for_space_available_id', type_='foreignkey')

        # Drop columns
        batch_op.drop_column('taken_time')
        batch_op.drop_column('duration')
        batch_op.drop_column('space_available_id')
        batch_op.drop_column('user_id')
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('space', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), nullable=False))
        batch_op.add_column(sa.Column('space_available_id', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('duration', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('taken_time', sa.DATETIME(), nullable=True))

        # Create foreign key constraints with names
        batch_op.create_foreign_key('correct_fk_name_for_user_id', 'user', ['user_id'], ['id'])
        batch_op.create_foreign_key('correct_fk_name_for_space_available_id', 'spaces_available', ['space_available_id'], ['id'])

        # Drop unique constraint
        batch_op.drop_constraint('uq_space_space_id', type_='unique')

        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)

        # Drop columns
        batch_op.drop_column('space_id')
        batch_op.drop_column('rating')
        batch_op.drop_column('description')
        batch_op.drop_column('date_taken')
    # ### end Alembic commands ###
